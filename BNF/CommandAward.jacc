// To compile and run this program using jacc and Sun's JDK:
//
//    jacc ConfigAwardCommand.jacc
//    javac ConfigCommand.java ConfigTokens.java
//    java  Main
//     ... enter arithmetic expressions ... hit EOF to terminate
//

%package   cn.boxfish.jack.parser
%class     CommandParser
%interface CommandTokens
%token ';' '(' ')' ':' IDENTIFIER WHITESPACE NUM

%%

prog  : command WHITESPACE rulename white matchCondition awardflow end  { $$ = new Rule($1,$3,$5,$6); }
      ;

end : white
    | ';'
    | white ';'
    ;

white : WHITESPACE
      |
      ;
command : IDENTIFIER
        ;
rulename : IDENTIFIER
         ;
matchCondition : '(' userIds ')'            { $$ = new MatchCondition($2); }
               ;
userIds : userIds ':' NUM                   { $$ = new UserIds($1,$3); }
        | NUM                               { $$ = new UserIds($1); }
        ;
awardflow : awardflow ';' white award white { $$ = new AwardFlow($1,$4); }
          | white award white               { $$ = new AwardFlow($2); }
          ;
award : IDENTIFIER WHITESPACE NUM           { $$ = new Award($1,$3); }
      ;

%%

  private CommandLexer lexer;

  CommandParser(CommandLexer lexer) { this.lexer = lexer; }

  private void yyerror(String msg) {
    Main.error(yyerrno<0 ? msg : yyerrmsgs[yyerrno]);
  }